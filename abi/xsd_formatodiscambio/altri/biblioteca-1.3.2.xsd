<?xml version="1.0" ?>
<!--
  ~ Author Inera srl https://www.inera.it
  ~ Copyright (C) 2023  Inera srl https://www.inera.it/
  ~
  ~ European Union Public Licence V. 1.2
  ~ EUPL (c) the European Community 2017
  ~
  ~ This European Union Public Licence (the "EUPL") applies to the Work or Software (as defined below) which is provided under the terms of this Licence.
  ~ Any use of the Work, other than as authorised under this Licence is prohibited (to the extent such use is covered by a right of the copyright holder of the Work).
  ~ The Original Work is provided under the terms of this Licence when the Licensor (as defined below) has placed the following notice immediately following the copyright notice for the Original Work:
  ~ Licensed under the EUPL V.1.2 or has expressed by any other mean his willingness to license under the EUPL.
  ~
  ~ You should have received a copy of the European Union Public Licence V. 1.2 along with this program.  If not, see https://eupl.eu/1.2/en/
  -->

<xsd:schema
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://formatodiscambio.abi.inera.it"
	xmlns="http://formatodiscambio.abi.inera.it"
	xmlns:ht="http://www.w3.org/1999/xhtml">
	<xsd:annotation>
		<xsd:documentation>
			ICCU - Istituto Centrale per il Catalogo Unico delle
			Biblioteche Italiane e per le Informazioni Bibliografiche
			<ht:br />
			Laboratorio per le Informazioni Bibliografiche
			<ht:br />
			Schema XML per lo scambio dei dati relativi a biblioteche
			italiane
			<ht:br />
			Revisione a cura di Carla Di Loreto, Ornella Napoli, Andrea
			Giuliano, Annamaria Mandillo
			<ht:br />
			Redazione dello schema a cura di Andrea Giuliano
			<ht:br />
			Storia delle revisioni
			<ht:pre>
				$Author: m.bartolozzi $ $Id: biblioteca-1.1.xsd,v 1.3
				2006-07-12 08:44:56 giuliano Exp $ $Log:
				biblioteca-1.1.xsd,v $ Revision 1.3 2006-07-12 08:44:56
				giuliano - Modificati o creati alcuni elementi per
				aderire quanto più possibile al modulo di rilevamento
				predisposto dalle regioni. In particolare:

				- reso opzionale il codice iccu, con l'idea di gestire
				biblioteche senza codice, ma almeno con provincia, come
				vengono gestite attualmente dall'applicativo - servizi:
				aggiunta carta-servizi, ore-settimanali,
				ore-settimanali-pomeridiane, settimane-apertura -
				patrimonio: aggiunti elementi
				acquisti-ultimi-quindici-anni, totale-posseduto e
				totale-posseduto-ragazzi; aggiunto attributo
				acquisti-ultimo-anno a materialeType - amministrativa:
				aggiunto elemento minori-quattordici-anni a utenti

				- Trasformati in nonNegativeInteger tutti gli integer.

				- Individuata la necessità di concordare liste
				d'autorità per: - servizi in carta-servizi (quali
				possono essere i servizi?) - categoria-ammessa in
				accesso (quali categorie possono accedere?)

				- Piccole correzioni qua e là.

				Revision 1.2 2006/03/14 09:25:54 giuliano Aggiunte: -
				citazione bibliografica per i cataloghi a volume -
				superficie totale e al pubblico - carta dei servizi (non
				gestita da ICCU) - quantità dei prestiti dei vari tipi
				(non gestiti da ICCU) Correzioni: - "fondo-antico"
				diventa "fondi-antichi", non ripetibile -
				"fondoAnticoType" ha ora solo un attributo "volumi", che
				a sua volta è solo una enumerazione di valori che indica
				i tre possibili intervalli numerici di posseduto (-1000,
				1000-5000, e 5000-)

				Revision 1.1 2006/03/07 13:17:23 giuliano Alla copertura
				bibliografica di catalogoType sono stati aggiunti due
				elementi con formato "YYYY", in modo da rappresentare un
				intervallo di anni.
			</ht:pre>
		</xsd:documentation>


	</xsd:annotation>

	<xsd:element name="biblioteche" type="bibliotecheType" />

	<xsd:complexType name="bibliotecheType">
		<xsd:sequence>
			<xsd:element name="biblioteca" type="bibliotecaType" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="bibliotecaType">
		<xsd:annotation>
			<xsd:documentation>
				L'elemento "biblioteca" è la radice di un documento di
				questo tipo. Tale elemento fa parte di un content model
				"xsd:all", che non obbliga a rispettare l'ordine in cui
				si presentano gli elementi, a differenza di
				"xsd:sequence".
			</xsd:documentation>
			<xsd:documentation>
				In tutto il resto dello schema si tende ad usare questo
				content model, perché meno rigido. Non dovrebbe
				comportare eccessivo carico per il parser.
			</xsd:documentation>
			<xsd:documentation>
				La maggior parte degli elementi e attributi risultano
				opzionali e ripetibili, ma questi aspetti saranno
				oggetto di una revisione futura dell'intero schema alla
				luce delle possibilità e delle richieste dei diversi
				partner interessati a scambiare dati nel formato qui
				descritto.
			</xsd:documentation>
			<xsd:documentation>
				Nei casi più elementari si è ritenuto opportuno fissare
				l'obbligatorietà e la ripetibilità degli elementi.
			</xsd:documentation>
		</xsd:annotation>
			<xsd:sequence>
				<xsd:element minOccurs="0" name="anagrafica"	type="anagraficaType" />
				<xsd:element minOccurs="0" name="cataloghi"	type="cataloghiType" />
				<xsd:element minOccurs="0" name="patrimonio"	type="patrimonioType" />
				<xsd:element name="specializzazione"	type="specializzazioneType" maxOccurs="unbounded" minOccurs="0" />
				<xsd:element minOccurs="0" name="servizi" type="serviziType" />
				<xsd:element minOccurs="0" name="amministrativa"	type="amministrativaType" />
			</xsd:sequence>
		</xsd:complexType>


	<xsd:complexType name="anagraficaType">
		<xsd:annotation>
			<xsd:documentation>
				Questo tipo raggruppa tutte le informazioni di tipo
				strettamente anagrafico.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="nome" type="nomeType">
				<xsd:annotation>
					<xsd:documentation>
						Nomi di una biblioteca. È un insieme in cui solo
						il nome attuale è obbligatorio e non ripetibile,
						mentre quelli precedenti e quelli alternativi
						sono opzionali e ripetibili.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="codici" type="codiciType">
				<xsd:annotation>
					<xsd:documentation>
						Codici di una biblioteca.
					</xsd:documentation>
					<xsd:documentation>
						È un elemento che raggruppa diversi codici.
						Nessuno è ripetibile. I nomi degli elementi
						dovrebbero essere auto-esplicativi.
					</xsd:documentation>
					<xsd:documentation>
						Si sfruttano qui le possibilità offerte da XML
						Schema per effettuare una prima validazione dei
						codici attraverso opportune espressioni
						regolari. È però importante capire che si tratta
						di una validazione superficiale: ad esempio, per
						i codici basati sulle sigle di provincia non
						viene controllato che la sigla sia corretta, ma
						solo del tipo "AA".
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="indirizzo" type="indirizzoType">
				<xsd:annotation>
					<xsd:documentation>
						Questo tipo descrive un indirizzo di biblioteca.
						È opzionale come tutti i suoi sotto-elementi, ma
						forse almeno uno dovrebbe essere reso
						obbligatorio, altrimenti si potrebbe istanziare
						un "indirizzo" vuoto.
					</xsd:documentation>
					<xsd:documentation>
						Per il CAP, il comune, la provincia, la regione
						e lo stato valgono le osservazioni fatte circa i
						codici di biblioteca: la validazione si ferma
						alla semplice struttura.
					</xsd:documentation>
					<xsd:documentation>
						Per comuni e provincie si adottano i codici
						ISTAT. Per lo stato si usa il codice ISO di due
						lettere, senza distinguere fra maiuscolo e
						minuscolo.
					</xsd:documentation>
					<xsd:documentation>
						Al momento non viene fatto alcun controllo sulla
						regione, ma è un elemento che la base dati
						ricevente dovrebbe essere in grado di ricavare a
						partire dal solo codice ISTAT del comune,
						attraverso proprie tabelle di raggruppamento.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="contatti" type="contattiType">
				<xsd:annotation>
					<xsd:documentation>
						Varie modalità per contattare la biblioteca e il
						suo personale.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="edificio" type="edificioType">
				<xsd:annotation>
					<xsd:documentation>
						Dati relativi all'edificio. Sono tutti
						opzionali, ma potrebbe essere più sensato
						renderne obbligatorio almeno uno.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="data-istituzione" type="data-istituzioneType">
				<xsd:annotation>
					<xsd:documentation>
						Data in cui è stata istituita formalmente
						l'attuale biblioteca. È possibile anche indicare
						l'anno di prima istituzione o fondazione, nel
						caso che la biblioteca abbia avuto nel tempo
						gestioni amministrative diverse.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="nomeType">
		<xsd:sequence>
			<xsd:element name="attuale" type="attualeType" />
			<xsd:element name="precedente" minOccurs="0" maxOccurs="unbounded" type="precedenteType" />
			<xsd:element name="alternativo" minOccurs="0" maxOccurs="unbounded" type="alternativoType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="attualeType">
		<xsd:restriction base="xsd:string" />
	</xsd:simpleType>

	<xsd:simpleType name="precedenteType">
		<xsd:restriction base="xsd:string" />
	</xsd:simpleType>

	<xsd:simpleType name="alternativoType">
		<xsd:restriction base="xsd:string" />
	</xsd:simpleType>

	<xsd:complexType name="codiciType">
		<xsd:sequence>
			<xsd:element name="iccu" minOccurs="0" type="iccuType">
				<xsd:annotation>
					<xsd:documentation>
						Il codice "iccu" può essere omesso nel caso la
						biblioteca in esame non sia mai stata censita
						dall'ICCU. Essa sarà trattata come una nuova
						biblioteca, come avviene tramite l'applicativo
						web dell'ICCU. Per questo motivo, è necessario
						che nell'anagrafica sia specificata la
						provincia, altrimenti non è possibile assegnare
						la parte iniziale del codice.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="acnp" type="acnpType" />
			<xsd:element minOccurs="0" name="rism" type="rismType" />
			<xsd:element minOccurs="0" name="sbn" type="sbnType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="iccuType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z]{2}[0-9]{4}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="rismType">
		<xsd:restriction base="xsd:string" />
	</xsd:simpleType>

	<xsd:simpleType name="acnpType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z]{2}[0-9]{3}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="sbnType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z]{2}[A-Z0-9][A-Z0-9]{2}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="indirizzoType">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="via" type="xsd:string" />
			<xsd:element minOccurs="0" name="cap" type="xsd:string" />
			<xsd:element minOccurs="0" name="frazione" type="xsd:string" />
			<xsd:element minOccurs="0" name="comune" type="comuneType" />
			<xsd:element minOccurs="0" name="provincia" type="provinciaType" />
			<xsd:element minOccurs="0" name="regione" type="xsd:string" />
			<xsd:element minOccurs="0" name="stato" type="statoType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="comuneType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{6}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="provinciaType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{3}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="statoType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[a-zA-Z]{2}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="contattiType">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="telefonico"	maxOccurs="unbounded" type="telefonicoType">
				<xsd:annotation>
					<xsd:documentation>
						Un contatto di tipo telefonico. Il prefisso è
						ovviamente quello internazionale.
					</xsd:documentation>
					<xsd:documentation>
						Nelle note, opzionali e ripetibili, si dovrebbe
						indicare, ad esempio, se si tratta di un
						centralino, o del numero di una persona etc...
						L'attributo "tipo" serve a distinguere un
						telefono da un fax.
					</xsd:documentation>
					<xsd:documentation>
						Numero e prefisso sono obbligatori e non
						ripetibili, altrimenti non avrebbe senso
						istanziare questo elemento.
					</xsd:documentation>
					<xsd:documentation>
						Prefisso e numero sono validati in modo molto
						elementare.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="altro" minOccurs="0" maxOccurs="unbounded" type="contattiAltroType">
				<xsd:annotation>
					<xsd:documentation>
						I contatti di questo tipo prevedono solo le note
						e un valore, oltre a un attributo "tipo" che, al
						momento, consente di specificare solo un
						indirizzo e-mail, una URL o un telex. Ovviamente
						la stringa "valore" può contenere qualsiasi
						cosa, quindi non c'è garanzia che tale stringa
						sia conforme al tipo specificato.
					</xsd:documentation>
					<xsd:documentation>
						Le note sono opzionali e ripetibili, sebbene la
						ripetibilità sia discutibile. Il valore è invece
						obbligatorio e non ripetibile, altrimenti si
						potrebbe istanziare un elemento vuoto.
					</xsd:documentation>
					<xsd:documentation>
						Una linea di sviluppo potrebbe prevedere dei
						pattern per la validazione dei valori. Questo
						comporterebbe però l'uso di sotto-elementi
						invece che di attributi, altrimenti non sarebbe
						possibile vincolare i valori con pattern.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="telefonicoType">
		<xsd:sequence>
			<xsd:element name="prefisso" type="xsd:string"/>
			<xsd:element name="numero" type="xsd:string" />
			<xsd:element minOccurs="0" name="note" type="xsd:string" />
		</xsd:sequence>
		<xsd:attribute name="tipo" use="required" type="telefonicoTipoType" />
	</xsd:complexType>

	<xsd:simpleType name="telefonicoTipoType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="fax" />
			<xsd:enumeration value="telefono" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="contattiAltroType">
		<xsd:sequence>
			<xsd:element name="valore" type="xsd:string" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="note" type="xsd:string" />
		</xsd:sequence>
		<xsd:attribute name="tipo" use="required" type="contattiAltroTipoType" />
	</xsd:complexType>

	<xsd:simpleType name="contattiAltroTipoType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="e-mail" />
			<xsd:enumeration value="telex" />
			<xsd:enumeration value="url" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="edificioType">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="monumentale" type="monumentaleType" />
			<xsd:element minOccurs="0" name="apposito" type="appositoType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="monumentaleType">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="nome" type="xsd:string" />
			<xsd:element minOccurs="0" name="data" type="annoSecoloType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="appositoType">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="dataApposito" type="annoSecoloType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="data-istituzioneType">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="attuale" type="annoSecoloType" />
			<xsd:element minOccurs="0" name="fondazione"	type="annoSecoloType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="patrimonioType">
		<xsd:annotation>
			<xsd:documentation>
				Tipo utilizzato per descrivere il patrimonio di una
				biblioteca. I sotto-elementi sono tutti ripetibili, e
				sarebbe opportuno istanziare questo elemento solo se
				contiene almeno un sotto-elemento non vuoto, ma si è
				preferito comunque non rendere obbligatori i
				sotto-elementi.
			</xsd:documentation>
			<xsd:documentation>
				L'elemento "materiale" va ripetuto per ciascun tipo di
				materiale. Non è prevista una gerarchia fra i materiali,
				anche se alcune basi dati, fra cui quella ICCU,
				organizzano i materiali in gerarchie a due o più
				livelli. Imporre in questo contesto una gerarchia non
				gestita in modo uniforme dalle base dati appare
				superfluo e limitante.
			</xsd:documentation>
			<xsd:documentation>
				Anche l'elemento "fondo-speciale" va ripetuto per
				ciascuna istanza di fondo. Inventario e catalogo
				topografico sono invece non ripetibili. L'elemento
				"fondi-antichi", invece, serve solo a conteggiare in
				modo approssimativo i volumi dei diversi fondi antichi
				della biblioteca, e quindi non è ripetibile. I tre
				valori dell'attributo "volumi" sono da intendersi "fino
				a 1000", "da 1000 a 5000", e "oltre 5000".
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="materiale" type="materialeType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="fondo-speciale" type="fondoSpecialeType" />
			<xsd:element minOccurs="0" name="fondi-antichi" type="fondoAnticoType" />
			<xsd:element minOccurs="0" name="inventario" type="infCarType">
				<xsd:annotation>
					<xsd:documentation>
						L'inventario, opzionale, può essere
						informatizzato o cartaceo (oppure, ovviamente,
						entrambi).
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="catalogo-topografico" type="infCarType">
				<xsd:annotation>
					<xsd:documentation>
						Il catalogo è trattato esattamente come
						l'inventario.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="acquisti-ultimi-quindici-anni" type="xsd:decimal" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Totale degli acquisti, indipendentemente dal
						tipo di materiale, effettuati negli ultimi
						quindici anni.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="totale-posseduto"	type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Totale del posseduto, indipendentemente dal tipo
						di materiale. Si pone il problema della coerenza
						di questo dato con quello del posseduto per i
						singoli materiali. Si presume che l'applicativo
						ricevente non sia tenuto a verificare questa
						coerenza.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="totale-posseduto-ragazzi"	type="xsd:nonNegativeInteger" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Totale del posseduto destinato ai minori di 16
						anni, indipendentemente dal tipo di materiale.
						Anche per questo dato, si presume che
						l'applicativo ricevente non sia tenuto a
						verificarne la coerenza con gli altri dati
						patrimoniali ricevuti.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="cataloghiType">
		<xsd:annotation>
			<xsd:documentation>
				Tipo che raccoglie i diversi cataloghi. Un elemento di
				questo tipo può dunque contenere i tre tipi di cataloghi
				di seguito definiti.
			</xsd:documentation>
			<xsd:documentation>
				Tutti i tre sotto-elementi sono opzionali e ripetibili
				in un ordine qualsiasi. Nel definire i tre sottotipi
				sono sfruttate dove possibile le somiglianze fra i tre,
				attraverso la derivazione di un tipo da un altro.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="catalogo-generale" minOccurs="0" maxOccurs="unbounded" type="catalogoGeneraleType" />
			<xsd:element name="catalogo-speciale" minOccurs="0" maxOccurs="unbounded" type="catalogoSpecialeType" />
			<xsd:element name="catalogo-collettivo" minOccurs="0" maxOccurs="unbounded" type="catalogoCollettivoType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="serviziType">
		<xsd:annotation>
			<xsd:documentation>
				Tipo di elemento relativo ai servizi offerti da una
				biblioteca. Fra questi, gli orari di apertura, il
				prestito, le informazioni bibliografiche, tipo e
				condizioni di accesso e diverse altre informazioni.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="orario" type="orarioServiziType">
				<xsd:annotation>
					<xsd:documentation>
						Questo elemento non ripetibile raggruppa tutte
						le informazioni relative agli orari di accesso
						alla biblioteca. I sottoelementi, tutti
						opzionali, sono per lo più ripetibili, eccetto
						ovviamente l'orario ufficiale.
					</xsd:documentation>
					<xsd:documentation>
						L'elemento serve solo da contenitore. Non è
						necessario dal punto di vista applicativo, ma
						agevola la leggibilità dello schema, che in
						questa parte è piuttosto articolato.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="prestito" type="prestitoType"/>
			<xsd:element name="informazioni-bibliografiche" type="informazioni-bibliograficheType" />
			<xsd:element name="internet" type="internetType" />
			<xsd:element name="accesso" minOccurs="0" type="accessoType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="sistemi" type="sistemaType" />
			<xsd:element minOccurs="0" maxOccurs="1"	name="sezioni-speciali" type="sezioni-specialiType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="orarioServiziType">
		<xsd:sequence>
			<xsd:element name="ufficiale" minOccurs="0" type="orarioUfficialeType">
				<xsd:annotation>
					<xsd:documentation>
						Questo elemento contiene almeno un elemento
						"orario" di tipo "orarioType", da non confondere
						con l'elemento soprastante. Si veda più avanti
						la descrizione di questo tipo di elemento.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="variazione" minOccurs="0"	maxOccurs="unbounded" type="variazioneOrarioType">
				<xsd:annotation>
					<xsd:documentation>
						Le variazioni di orario sono espresse da
						eventuali elementi di questo tipo. Esso è
						identico ad un orario ufficiale, salvo per
						l'aggiunta del periodo di validità e da una nota
						esplicativa, tipo "Settimana di Ferragosto" o
						simili.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="chiusura" minOccurs="0" maxOccurs="unbounded" type="chiusuraType">
				<xsd:annotation>
					<xsd:documentation>
						Un periodo di chiusura è semplicemente un
						intervallo di date, più una nota esplicativa.
						Entrambi i sotto-elementi sono semplici
						stringhe, ma per il periodo potrebbe essere
						necessario un pattern significativo, se qualche
						base dati utilizzasse questo dato per controlli
						automatici. Se serve solo come stringa da
						visualizzare sulla home page della biblioteca,
						questa forma di validazione è superflua.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ore-settimanali" type="xsd:decimal" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Totale delle ore di apertura settimanali. Questo
						elemento può essere presente insieme all'orario
						dettagliato (di tipo orarioType), e il suo
						valore può essere incoerente con l'orario
						dettagliato, ma gli applicativi che ricevono i
						dati sono liberi di verificare la congruità dei
						dati segnalati oppure no.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ore-settimanali-pomeridiane" minOccurs="0" type="xsd:decimal">
				<xsd:annotation>
					<xsd:documentation>
						Totale delle ore di apertura pomeridiana
						settimanali. Ovviamente dovrebbe essere minore
						di ore-settimanali, ma circa la congruità di
						questo dato con gli altri, vale quanto già detto
						per ore-settimanali: non è garantito un
						controllo da parte degli applicativi riceventi.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="settimane-apertura" minOccurs="0"	type="xsd:decimal">
				<xsd:annotation>
					<xsd:documentation>
						Numero di settimane di apertura della biblioteca
						in un anno. Anche per questo dato, gli
						applicativi riceventi non dovrebbero essere
						costretti a verificare la coerenza con gli altri
						dati di questo gruppo.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="variazioneOrarioType">
		<xsd:sequence>
			<xsd:element  name="orarioUfficiale" maxOccurs="unbounded" type="orarioUfficialeType" />
			<xsd:element name="periodo" type="xsd:string" />
			<xsd:element name="note" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="chiusuraType">
		<xsd:sequence>
			<xsd:element name="periodo" type="xsd:string" />
			<xsd:element name="note" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="prestitoType">
		<xsd:annotation>
			<xsd:documentation>
				Varie informazioni relative al servizio di prestito. Ci
				sono diversi sotto-elementi di ovvio significato, tutti
				opzionali.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="locale" type="localeType">
				<xsd:annotation>
					<xsd:documentation>
						A parte l'elemento "automatizzato", che serve ad
						indicare se il prestito avviene con procedure
						automatizzate oppure no, e che pertanto è di
						tipo "siNoType", gli altri sono soltanto
						stringhe, anche se la durata potrebbe essere
						vincolata con un pattern opportuno, e gli altri
						due possono contenere valori controllati, che
						però è meglio lasciare fuori dallo schema. In
						particolare, il materiale escluso potrebbe
						essere normalizzato in base alle apposite norme
						ISO. Qualcosa del genere andrebbe studiato anche
						per gli utenti ammessi.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="interbibliotecario" type="interbibliotecarioType">
				<xsd:annotation>
					<xsd:documentation>
						In questo elemento, pur opzionale, si è ritenuto
						opportuno rendere obbligatorio almeno il
						sotto-elemento "tipo", escludendo la paradossale
						situazione di una biblioteca che offre il
						servizio, ma non sa di che tipo.
					</xsd:documentation>
					<xsd:documentation>
						L'elemento è ripetibile al più due volte perché
						la biblioteca può offrire due tipi di prestito
						interbibliotecario, ed è opportuno che essi
						siano descritti in elementi separati. Tuttavia
						non si può escludere che vengano descritti due
						elementi dello stesso tipo, sebbene un
						applicativo dovrebbe produrne tipicamente sempre
						al più due, e di tipi diversi.
					</xsd:documentation>
					<xsd:documentation>
						Ovviamente l'elemento "sistema-ill" è opzionale
						e ripetibile, in quanto la biblioteca può
						partecipare a più d'uno.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="localeType">
		<xsd:sequence>
			<xsd:element minOccurs="0" name="automatizzato" type="siNoType" />
			<xsd:element minOccurs="0" name="durata" type="xsd:string" />
			<xsd:element minOccurs="0" name="materiale-escluso" type="xsd:string" />
			<xsd:element minOccurs="0" name="utenti-ammessi"	type="xsd:string" />
			<xsd:element name="totale-prestiti" type="xsd:decimal">
				<xsd:annotation>
					<xsd:documentation>
						Questo elemento conteggia il totale dei prestiti
						di questo tipo effettuati nel periodo di
						osservazione. Dev'essere un numero.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="interbibliotecarioType">
		<xsd:sequence>
			<xsd:element minOccurs="1" name="tipo" type="tipoType" />
			<xsd:element minOccurs="0" name="automatizzato" type="siNoType" />
			<xsd:element name="ruolo" type="ruoloType" />
			<xsd:element minOccurs="0" maxOccurs="unbounded"	name="sistema-ill" type="sistema-illType" />
			<xsd:element name="totale-prestiti" type="xsd:decimal">
				<xsd:annotation>
					<xsd:documentation>
						Questo elemento conteggia il totale dei prestiti
						di questo tipo effettuati nel periodo di
						osservazione. Dev'essere un numero.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="tipoType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="internazionale" />
			<xsd:enumeration value="nazionale" />
		</xsd:restriction>
	</xsd:simpleType>


	<xsd:simpleType name="ruoloType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="POS" />
			<xsd:enumeration value="DSC" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="sistema-illType">
		<xsd:sequence>
			<xsd:element name="nome" type="xsd:string" />
			<xsd:element minOccurs="0" name="note" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="informazioni-bibliograficheType">
		<xsd:annotation>
			<xsd:documentation>
				Per segnalare la disponibilità del servizio interno si
				usa l'elemento vuoto omonimo, soluzione discutibile ma
				funzionante. Essa ha il vantaggio di mettere questo
				servizio allo stesso livello del "servizio-esterno",
				com'è logico. Quest'ultimo però è più articolato.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="servizio-interno" minOccurs="0" type="xsd:string" />
			<xsd:element name="servizio-esterno" minOccurs="0" type="servizio-esternoType">
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="servizio-esternoType">
		<xsd:annotation>
			<xsd:documentation>
				Se è specificato il servizio esterno, sarebbe opportuno
				indicare almeno un "modo" di espletamento del servizio
				stesso. Come in altri casi, anche un elemento vuoto
				potrebbe essere accettato, come semplice segnalazione di
				un servizio disponibile. Starà poi all'applicativo
				ricevente decidere se ignorare tale informazione, perché
				troppo vaga, o tenerne comunque conto.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="modo" minOccurs="0" maxOccurs="unbounded" type="servizio-esternoModoType">
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="servizio-esternoModoType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="tel" />
			<xsd:enumeration value="fax" />
			<xsd:enumeration value="e-mail" />
			<xsd:enumeration value="web" />
			<xsd:enumeration value="sms" />
			<xsd:enumeration value="mms" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="internetType">
		<xsd:annotation>
			<xsd:documentation>
				Accesso a Internet da postazioni locali. La modalità
				"limitato" potrebbe essere fonte di equivoci. In ogni
				caso, la modalità è opzionale e ripetibile.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="modo" minOccurs="0" maxOccurs="unbounded"	type="modoInternetType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="accessoType">
		<xsd:annotation>
			<xsd:documentation>
				Riguarda le modalità di accesso alla biblioteca, sia in
				termini logistici (e.g. portatori di handicap), sia in
				termini amministrativi (chi può accedere ai servizi e a
				quali condizioni può farlo).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="handicap" minOccurs="0" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation>
						La presenza di questo elemento, che può essere
						vuoto, segnala semplicemente la possibilità di
						accesso ai portatori di handicap, ma per ora non
						viene qui attribuito alcun significato
						particolare al suo eventuale contenuto.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="categoria-ammessa" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						Le categorie dipendono molto dalle diverse basi
						dati, per cui in questo schema non si è ritenuto
						opportuno elencarne alcuna. Possono essere
						specificate più categorie, sotto forma di
						semplici stringhe non controllate. I valori qui
						utilizzati andrebbero però concordati,
						stabilendo una lista d'autorità.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element minOccurs="0" name="condizioni-accesso"	maxOccurs="unbounded" type="condizioni-accessoType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="condizioni-accessoType">
		<xsd:annotation>
			<xsd:documentation>
				Condizioni di accesso. Tutti i sotto-elementi sono
				opzionali, anche se avrebbe poco senso un elemento
				vuoto. I documenti, a loro volta, possono non essere
				specializzati. Questo potrebbe indicare la necessità di
				esibire un gnerico documento di riconoscimeno, non
				meglio speciicato.
			</xsd:documentation>
			<xsd:documentation>
				Le condizioni raggruppate andebbero intese in AND
				logico. I doumenti nell'apposito elemento sonoinvece
				equivalenti, cioè in OR ogico. Infine, più eementi
				"condizioni-accesso", on gli opportuni sottoelementi,
				ono da considerarsi in OR ogico.
			</xsd:documentation>
			<xsd:documentation>
				Ad esempio, il tipico caso almeno 18 anni e un documento
				valdo" si traduce in opportuni element "età" e
				"documenti", ma senza un eemento "appuntamento". Se in
				alternaiva la biblioteca è accesibile incondizionatamete
				per appuntamento, va agginto un apposito eemento
				"condizioni-accesso", cl solo sotto-elemento
				"appuntaento".
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="0" name="eta" type="etaType" />
			<xsd:element minOccurs="0" name="documenti" type="documentiType" />
			<xsd:element name="appuntamento" minOccurs="0" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="etaType">
		<xsd:attribute name="min" type="xsd:nonNegativeInteger" />
		<xsd:attribute name="max" type="xsd:nonNegativeInteger" />
	</xsd:complexType>

	<xsd:complexType name="documentiType">
		<xsd:sequence>
			<xsd:element minOccurs="0" maxOccurs="unbounded" name="tipo"	type="tipoDocType">
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="sistemaType">
		<xsd:annotation>
			<xsd:documentation>
				Se la biblioteca partecipa a uno o più sistemi di
				biblioteche, questi devono essere dichiarati in questo
				elemento, utilizzando sottoelementi "sistema". È
				obbligatorio almeno uno di questi sottoelementi. I
				sottoelementi "sistema" contegono semplicemente il nome
				di ciascun sistema di biblioteche.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" name="sistema" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="sezioni-specialiType">
		<xsd:annotation>
			<xsd:documentation>
				Se la biblioteca ha delle sezioni speciali, queste vanno
				inserite in altrettanti elementi "sezione". Nella
				maschera di ricerca avanzata dell'anagrafe, alla voce
				"Sezione speciale", è disponibile l'intero elenco delle
				sezioni speciali registrate dal sistema.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element minOccurs="1" name="sezione" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="amministrativaType">
		<xsd:annotation>
			<xsd:documentation>
				Tipo di elemento recante informazioni di carattere
				amministrativo. È la parte che più probabilmente
				richiederà aggiustamenti per soddisfare le esigenze di
				vari enti. Molti elementi sono auto-esplicativi.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="codice-fiscale" type="xsd:string" minOccurs="0" />
			<xsd:element name="partita-IVA" type="xsd:string"	minOccurs="0" />
			<xsd:element name="autonoma" type="siNoType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Eventuale autonomia di spesa.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="ente" minOccurs="0" type="enteType" />
			<xsd:element name="regolamento" minOccurs="0" type="regolamentoType"/>
			<xsd:element name="carta-servizi" minOccurs="0" type="carta-serviziType" />
			<xsd:element name="deposito-legale" minOccurs="0" maxOccurs="unbounded" type="deposito-legaleType" />
			<xsd:element name="strutture" minOccurs="0" type="struttureType" />
			<xsd:element name="utenti" minOccurs="0" type="utentiType" />
			<xsd:element name="personale" minOccurs="0" type="personaleType"/>
			<xsd:element name="bilancio" minOccurs="0" type="bilancioType"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="enteType">
		<xsd:annotation>
			<xsd:documentation>
				Dati relativi all'ente da cui la biblioteca dipende.
				Almeno il nome è obbligatorio. Inoltre, andrebbe
				discussa l'opportunità di fare riferimento ad una lista
				controllata di enti, individuati tramite il solo codice
				fiscale o la partita IVA. Devono esistere certamente
				simili liste, e le diverse basi dati dovrebbero
				attenersi ad esse, almeno in parte.
			</xsd:documentation>
			<xsd:documentation>
				La funzione-obiettivo corrisponde al COFOG.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="nome" type="xsd:string" />
			<xsd:element name="tipologia-amministrativa" minOccurs="0" type="xsd:string" />
			<xsd:element name="tipologia-funzionale" minOccurs="0" type="xsd:string" />
			<xsd:element name="stato" minOccurs="0" type="xsd:string" />
			<xsd:element name="codice-fiscale" minOccurs="0"	type="xsd:string" />
			<xsd:element name="partita-IVA" type="xsd:string" />
			<xsd:element name="funzione-obiettivo" minOccurs="0" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="regolamentoType">
		<xsd:sequence>
			<xsd:element name="norma" type="xsd:string" minOccurs="0" />
			<xsd:element name="url" type="xsd:string" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="carta-serviziType">
		<xsd:annotation>
			<xsd:documentation>
				Questo elemento opzionale indica se la biblioteca si è
				dotata di una carta dei servizi o meno, e per quali
				servizi specifici. Gli eventuali singoli servizi devono
				essere elencati in altrettanti elementi "servizio",
				sotto forma di stringhe alfanumeriche. Se l'elemento è
				vuoto, vuol dire solo che esiste una carta dei servizi,
				ma mancano altre informazioni. I valori andrebbero
				standardizzati attraverso un'opportuna lista d'autorità
				concordata.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="servizio" type="xsd:string" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="deposito-legaleType">
		<xsd:sequence>
			<xsd:element name="nazionale" type="siNoType" minOccurs="0" />
			<xsd:element name="regionale" type="siNoType" minOccurs="0" />
			<xsd:element name="anno-inizio" type="xsd:string" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="struttureType">
		<xsd:annotation>
			<xsd:documentation>
				Questo elemento e i suoi sotto-elementi descrivono
				sommariamente le strutture di cui la biblioteca dispone.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="scaffalature" minOccurs="0" type="scaffalatureType" />
			<xsd:element name="superficie" minOccurs="0"	type="superficieType" />
			<xsd:element name="postazioni" minOccurs="0"	type="postazioniType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="scaffalatureType">
		<xsd:annotation>
			<xsd:documentation>
				I valori dei sotto-elementi sono ovviamente da
				intendersi in metri. Trattandosi di decimali, non sono
				ammessi valori come "30m" o "30 metri".
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="magazzino" type="xsd:decimal" minOccurs="0" />
			<xsd:element name="pubbliche" type="xsd:decimal" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="superficieType">
		<xsd:annotation>
			<xsd:documentation>
				I valori dei sotto-elementi sono ovviamente da
				intendersi in metri quadrati. Trattandosi di decimali,
				non sono ammessi valori come "100mq" o "100 metri
				quadri".
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="totale" type="xsd:decimal" minOccurs="0" />
			<xsd:element name="al-pubblico" type="xsd:decimal" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="postazioniType">
		<xsd:annotation>
			<xsd:documentation>
				Le postazioni si dividono in diversi elementi, tutti
				opzionali. Se un elemento è presente, deve avere un
				valore, e questo è forse scomodo se si vuole solo
				indicare che la biblioteca dispone genericamente di
				postazioni internet o audio, senza indicare quante. Per
				consentire la semplice segnalazione si dovrebbe usare un
				costrutto più complesso.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="lettura" type="xsd:nonNegativeInteger"	minOccurs="0" />
			<xsd:element name="video" type="xsd:nonNegativeInteger" minOccurs="0" />
			<xsd:element name="audio" type="xsd:nonNegativeInteger" minOccurs="0" />
			<xsd:element name="internet" type="xsd:nonNegativeInteger" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="utentiType">
		<xsd:annotation>
			<xsd:documentation>
				Informazioni relative agli utenti della biblioteca.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ultimo-anno" type="xsd:nonNegativeInteger"	minOccurs="0" />
			<xsd:element name="iscritti-prestito" type="xsd:nonNegativeInteger" minOccurs="0" />
			<xsd:element name="minori-quattordici-anni" type="xsd:nonNegativeInteger" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="personaleType">
		<xsd:annotation>
			<xsd:documentation>
				Informazioni relative al personale impiegato a vario
				titolo nella biblioteca.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="totale" type="xsd:nonNegativeInteger" minOccurs="0" />
			<xsd:element name="temporaneo" type="xsd:nonNegativeInteger" minOccurs="0" />
			<xsd:element name="part-time" type="xsd:nonNegativeInteger" minOccurs="0" />
			<xsd:element name="esterno" type="xsd:nonNegativeInteger"	minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="bilancioType">
		<xsd:annotation>
			<xsd:documentation>
				Informazioni relative al bilancio della biblioteca.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="entrate" type="xsd:decimal" minOccurs="0" />
			<xsd:element name="uscite" minOccurs="0" type="usciteType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="usciteType">
		<xsd:sequence>
			<xsd:element name="personale" type="xsd:decimal" minOccurs="0" />
			<xsd:element name="funzionamento" type="xsd:decimal" minOccurs="0" />
			<xsd:element name="automazione" type="xsd:decimal" minOccurs="0" />
			<xsd:element name="patrimonio" type="xsd:decimal"	minOccurs="0" />
			<xsd:element name="altre" type="xsd:decimal" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="specializzazioneType">
		<xsd:annotation>
			<xsd:documentation>
				La specializzazione di una biblioteca è semplicemente
				una CDD più una descrizione libera opzionale.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="cdd" type="cddType" />
			<xsd:element name="descrizione-libera" type="xsd:string" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<!-- Tipi secondari legati al patrimonio e ai cataloghi -->

	<xsd:complexType name="materialeType">
		<xsd:annotation>
			<xsd:documentation>
				Un tipo di materiale è descritto semplicemente da un
				nome e da un posseduto (opzionale). Quest'ultimo
				dev'essere un intero non negativo.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="nome" type="xsd:string" use="required" />
		<xsd:attribute name="posseduto" type="xsd:nonNegativeInteger" />
		<xsd:attribute name="acquisti-ultimo-anno" type="xsd:nonNegativeInteger" />
	</xsd:complexType>

	<xsd:complexType name="fondoSpecialeType">
		<xsd:annotation>
			<xsd:documentation>
				A parte alcuni elementi dall'ovvio significato, la
				"descrizione" corrisponde ad una descrizione libera del
				fondo speciale, mentre "digitalizzazione" registra in
				forma libera lo stato dell'eventuale digitalizzazione
				del fondo.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="nome" type="xsd:string" />
			<xsd:element minOccurs="0" name="descrizione" type="xsd:string" />
			<xsd:element minOccurs="0" name="cdd" type="cddType" />
			<xsd:element minOccurs="0" name="depositato" type="siNoType" />
			<xsd:element minOccurs="0" name="catalogo" type="formaType" />
			<xsd:element minOccurs="0" name="inventarioFondoSpeciale" type="formaType" />
			<xsd:element minOccurs="0" name="digitalizzazione" type="xsd:string" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="fondoAnticoType">
		<xsd:annotation>
			<xsd:documentation>
				I fondi antichi vanno classificati in base al posseduto:
				fino a 1000, da 1000 a 5000, oltre 5000. Non è quindi
				possibile specificare esattamente un posseduto.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="volumi" use="required" type="volumiType"/>
	</xsd:complexType>

	<xsd:simpleType name="volumiType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="-1000" />
			<xsd:enumeration value="1000-5000" />
			<xsd:enumeration value="5000-" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="catalogoType">
		<xsd:annotation>
			<xsd:documentation>
				I cataloghi hanno diverse caratteristiche comuni. Vale
				la pena di definire un tipo che raccoglie queste
				caratteristiche, per poi derivare da esso, tramite
				restriction, i diversi tipi di cataloghi.
			</xsd:documentation>
			<xsd:documentation>
				Tutti contengono le quattro forme "schede", "volume",
				"microfilm" e "digitale", ciascuna con la sua
				percentuale di copertura (vedi "formaType"), e tutti
				hanno una copertura temporale. La forma "digitale" ha un
				tipo particolare, "digitaleType", che aggiunge a
				"formaType" il solo sott-elemento "supporto".
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="forme" minOccurs="0" type="formeCatalogoType"/>
			<xsd:element name="copertura" minOccurs="0" type="coperturaType"/>
		</xsd:sequence>
		<xsd:attribute name="tipo" type="xsd:string" use="required" />
	</xsd:complexType>

	<xsd:complexType name="coperturaType">
		<xsd:annotation>
			<xsd:documentation>
				La copertura bibliografica deve essere espressa tramite
				un anno iniziale (elemento "da-anno") e un anno finale
				(elemento "ad-anno"). Entrambi devono avere il formato
				"YYYY", cioè esattamente quattro cifre (non è ammesso
				alcun altro carattere).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="da-anno" type="annoType" />
			<xsd:element name="ad-anno" type="annoType" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="annoType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{4}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="formeCatalogoType">
		<xsd:sequence>
			<xsd:element name="schede" type="formaType" minOccurs="0" maxOccurs="unbounded" />
			<xsd:element name="volume" type="volumeType" minOccurs="0" maxOccurs="unbounded" />
			<xsd:element name="microforme" type="formaType" minOccurs="0" maxOccurs="unbounded" />
			<xsd:element name="digitale" type="digitaleType"	minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="catalogoGeneraleType">
		<xsd:annotation>
			<xsd:documentation>
				Catalogo generale. Deriva da "catalogoType", con la sola
				aggiunta del "tipo" di catalogo, per il quale si
				dovrebbero usare solo i valori seguenti: topografico,
				autore, sistematico, dizionario, titoli, soggetto.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="catalogoType">
				<xsd:sequence>
					<xsd:element name="tipo" type="xsd:string" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="catalogoSpecialeType">
		<xsd:annotation>
			<xsd:documentation>
				Catalogo speciale. Deriva da "catalogoType", con
				l'aggiunta del "nome" del catalogo e del "materiale".
			</xsd:documentation>
			<xsd:documentation>
				Notare come tale tipo di elemento costituisce la base
				per il "catalogoSpecialeType".
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="catalogoType">
				<xsd:sequence>
					<xsd:element name="nome" type="xsd:string" minOccurs="0" />
					<xsd:element name="materiale" type="xsd:string" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="catalogoCollettivoType">
		<xsd:annotation>
			<xsd:documentation>
				Catalogo collettivo. Deriva da "catalogoSpecialeType",
				con l'aggiunta della "zona", a sua volta specializzata
				in un "nome" e in un "tipo".
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="catalogoSpecialeType">
				<xsd:sequence>
					<xsd:element name="zona" minOccurs="0" type="zonaType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="zonaType">
		<xsd:sequence>
			<xsd:element name="nome" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Il nome della zona può essere ad esempio
						"Toscana", "Triveneto", "Centro-Sud", "Castelli
						Romani"...
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="tipo" type="xsd:string" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Il tipo della zona può essere invece
						"regionale", "comunale" ...
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="formaType">
		<xsd:annotation>
			<xsd:documentation>
				La forma di un catalogo ha di solito un solo attributo,
				la percentuale di copertura, riferita al patrimonio
				inventariato o supposto, relativo alla forma
				particolare. Un'eccezione è la forma "digitale", che
				aggiunge un elemento (o attributo che sia) relativo al
				tipo di catalogo digitale (CD-ROM, web o altro).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="percentuale" type="xsd:string" />
	</xsd:complexType>

	<xsd:complexType name="digitaleType">
		<xsd:annotation>
			<xsd:documentation>
				La forma "digitale" di un catalogo richiede
				l'indicazione di un supporto. Per il momento, nel caso
				on-line non si può indicare la URL.
			</xsd:documentation>
			<xsd:documentation>
				Si noti che comunque questo tipo è derivato da
				"formaType" e quindi eredita le sue caratteristiche.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="formaType">
				<xsd:sequence>
					<xsd:element name="supporto" type="xsd:string" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="volumeType">
		<xsd:annotation>
			<xsd:documentation>
				La forma "volumeType" deriva dalla generica "formaType"
				con l'aggiunta della citazione bibliografica, specifica
				di questa forma. La citazione è comunque opzionale.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="formaType">
				<xsd:sequence>
					<xsd:element name="citazione-bibliografica" type="xsd:string" minOccurs="0" />
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:complexType name="infCarType">
		<xsd:annotation>
			<xsd:documentation>
				Un elemento di questo tipo serve solo a specificare una
				forma cartacea e una forma informatizzata di qualcosa,
				tipicamente un catalogo, ma non solo. Entrambi gli
				elementi che definisce sono semplici siNoType.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="informatizzato" type="siNoType" minOccurs="0" />
			<xsd:element name="cartaceo" type="siNoType" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:simpleType name="cddType">
		<xsd:annotation>
			<xsd:documentation>
				La CDD è vincolata a tre cifre fisse prima del punto, e
				al più altre tre dopo il punto. Alcune basi dati
				potrebbero gestire più cifre, per cui sarebbe opportuno
				evitare questo limite, e lasciare ai singoli applicativi
				decidere se troncare o meno il dato in arrivo (o anche
				in partenza.)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:decimal">
			<xsd:pattern value="[0-9]{3}.[0-9]{0,3}"/>
		</xsd:restriction>
	</xsd:simpleType>

	<!--Altri tipi secondari -->
<!--
	<xsd:complexType name="orarioType">
		<xsd:annotation>
			<xsd:documentation>
				Questo tipo descrive sostanzialmente l'orario ufficiale,
				ma è anche un tipo base da cui derivare le variazioni di
				orario. Poiché le variazioni sono all'interno dei
				servizi, questo tipo base deve essere globale.
			</xsd:documentation>
			<xsd:documentation>
				La struttura di questo tipo è molto semplice: un giorno
				della settimana, un orario iniziale e un'orario finale.
				Sebbene il questionario ICCU preveda una struttura più
				articolata, queste informazioni sono sufficienti a
				descrivere qualsiasi ragionevole situazione, e
				dovrebbero essere gestibili da qualsiasi base dati.
				Strutture più articolate possono essere ricondotte a
				questa, ripetendo opportunamente gli elementi.
			</xsd:documentation>
			<xsd:documentation>
				Per i limiti orari si potrebbe specificare un vincolo
				più fine, perché quello attuale accetterebbe anche un
				orario come "35:72".
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element  name="orarioUfficiale" maxOccurs="unbounded" type="orarioUfficialeType" />
		</xsd:sequence>
	</xsd:complexType> -->

	<xsd:complexType name="orarioUfficialeType">
		<xsd:attribute name="giorno" use="required"	type="giornoSettimanaType" />
		<xsd:attribute name="dalle" use="required" type="oraMinutiType" />
		<xsd:attribute name="alle" use="required" type="oraMinutiType" />
	</xsd:complexType>


	<xsd:simpleType name="oraMinutiType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[0-9]{2}:[0-9]{2}" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="giornoSettimanaType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="lun" />
			<xsd:enumeration value="mar" />
			<xsd:enumeration value="mer" />
			<xsd:enumeration value="gio" />
			<xsd:enumeration value="ven" />
			<xsd:enumeration value="sab" />
			<xsd:enumeration value="dom" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="siNoType">
		<xsd:annotation>
			<xsd:documentation>
				Un elemento di questo tipo ammette solo valori del tipo
				"si/no" (ma non esattamente questi due...)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="s" />
			<xsd:enumeration value="n" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType  name="modoInternetType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="libero" />
			<xsd:enumeration value="a pagamento" />
			<xsd:enumeration value="a tempo" />
			<xsd:enumeration value="limitato" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType	name="tipoDocType">
		<xsd:restriction	base="xsd:string">
			<xsd:enumeration	value="documentoIdentita" />
			<xsd:enumeration	value="tesseraBiblioteca" />
			<xsd:enumeration value="letteraPresentazione" />
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="annoSecoloType">
		<xsd:annotation>
			<xsd:documentation>
				Un elemento di questo tipo contiene una stringa come
				valore, e ha un attributo "tipo" che serve ad indicare
				se tale valore è un anno o un secolo. Questo non esclude
				un elemento con valore "XVI" e tipo "anno", per cui
				sarebbe auspicabile un costrutto più coerente.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute name="tipo" type="annoSecoloTipoType" />
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>

	<xsd:simpleType name="annoSecoloTipoType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="anno" />
			<xsd:enumeration value="secolo" />
		</xsd:restriction>
	</xsd:simpleType>

</xsd:schema>
